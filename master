#!/bin/bash

set -e

# Update package list and install prerequisites
sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl gpg

# Add Kubernetes' official GPG key
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

# Add Kubernetes repository to Apt sources
echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

# Update package list again to include Kubernetes repository
sudo apt-get update

# Install Kubernetes components
sudo apt-get install -y kubelet kubeadm kubectl

# Hold the Kubernetes packages to prevent accidental upgrades
sudo apt-mark hold kubelet kubeadm kubectl

# Verify the installations
kubectl version --client && echo && kubeadm version

# Disable swap
sudo swapoff -a
sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

# Install and configure UFW (Uncomplicated Firewall)
sudo apt install -y ufw
sudo ufw enable

# Allow necessary ports for Kubernetes and SSH
sudo ufw allow 6443/tcp  # Kubernetes API server
sudo ufw allow 2379/tcp  # etcd server client API
sudo ufw allow 2380/tcp  # etcd server peer API
sudo ufw allow 10250/tcp # Kubelet API
sudo ufw allow 10251/tcp # Kube-scheduler
sudo ufw allow 10252/tcp # Kube-controller-manager
sudo ufw allow 10255/tcp # Kubelet read-only port
sudo ufw allow ssh       # Allow SSH access

# Reload UFW to apply changes
sudo ufw reload

echo "Kubernetes master node setup complete."
