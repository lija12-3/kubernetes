---
- name: Setup Kubernetes Worker Node
  hosts: worker
  become: yes
  tasks:
    - name: Update package list and install prerequisites
      apt:
        update_cache: yes
        cache_valid_time: 3600
        name:
          - curl
          - gnupg2
          - software-properties-common
          - apt-transport-https
          - ca-certificates
        state: present
      # Updates the package list and installs essential packages.

    - name: Add Kubernetes' GPG key
      command: >
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      # Adds Kubernetes' GPG key to verify Kubernetes packages.

    - name: Add Kubernetes repository to Apt sources
      copy:
        dest: /etc/apt/sources.list.d/kubernetes.list
        content: |
          deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /
      # Adds the Kubernetes repository to the Apt sources list.

    - name: Update package list again to include Kubernetes repository
      apt:
        update_cache: yes
      # Updates the package list to include the new Kubernetes repository.

    - name: Install Kubernetes components
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
      # Installs the Kubernetes components kubelet, kubeadm, and kubectl.

    - name: Hold Kubernetes packages to prevent accidental upgrades
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: held
      # Holds the Kubernetes packages to prevent them from being upgraded accidentally.

    - name: Verify installations
      command: >
        kubectl version --client && echo && kubeadm version
      register: kube_versions
      ignore_errors: yes
      # Verifies the installations of Kubernetes components by checking their versions.

    - name: Disable swap to meet Kubernetes requirements
      command: swapoff -a
      # Disables swap to meet Kubernetes requirements.

    - name: Comment out swap entry in fstab
      lineinfile:
        path: /etc/fstab
        regexp: '^.*swap.*$'
        line: '# &'
        state: present
      # Comments out the swap entry in fstab to ensure swap is not enabled on reboot.

    - name: Install UFW
      apt:
        name: ufw
        state: present
      # Installs UFW (Uncomplicated Firewall).

    - name: Enable UFW
      ufw:
        state: enabled
      # Enables UFW.

    - name: Allow necessary ports for Kubernetes worker node communication
      ufw:
        rule: allow
        name: "{{ item.name }}"
        port: "{{ item.port }}"
        proto: tcp
      loop:
        - { name: 'Kubelet API', port: 10250 }
        - { name: 'NodePort Services', port: '30000:32767' }
      # Allows necessary ports for Kubernetes worker node communication through UFW.

    - name: Reload UFW to apply changes
      command: ufw reload
      # Reloads UFW to apply the new rules.

    - name: Display setup completion message
      debug:
        msg: "Worker node setup completed. You can now join this node to the Kubernetes cluster using the kubeadm join command provided by your master node."
      # Displays a message indicating the setup is complete and provides instructions for joining the cluster.
